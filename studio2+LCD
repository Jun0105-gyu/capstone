import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';

void main() {
  runApp(MaterialApp(
    title: 'Drowsiness Timer',
    home: DrowsinessTimerPage(),
  ));
}

class DrowsinessTimerPage extends StatefulWidget {
  @override
  _DrowsinessTimerPageState createState() => _DrowsinessTimerPageState();
}

class _DrowsinessTimerPageState extends State<DrowsinessTimerPage> {
  Timer? _pollingTimer;
  String _formattedTime = "00:00:00";
  final String flaskURL = 'http://192.168.137.69:5000'; // ← 너의 Flask 주소

  @override
  void initState() {
    super.initState();
    _startPollingFlaskTime();
  }

  @override
  void dispose() {
    _pollingTimer?.cancel();
    super.dispose();
  }

  void _startPollingFlaskTime() {
    _pollingTimer = Timer.periodic(Duration(seconds: 1), (timer) async {
      await fetchTimeFromFlask();
      await checkDrowsiness();
    });
  }

  Future<void> fetchTimeFromFlask() async {
    try {
      final res = await http.get(Uri.parse('$flaskURL/get_time'));
      if (res.statusCode == 200) {
        final data = jsonDecode(res.body);
        setState(() {
          _formattedTime = data["time"];
        });
      } else {
        print("Failed to get time: ${res.statusCode}");
      }
    } catch (e) {
      print("Error fetching time: $e");
    }
  }

  Future<void> checkDrowsiness() async {
    try {
      final res = await http.get(Uri.parse('$flaskURL/detect_drowsiness'));
      if (res.statusCode == 200) {
        final data = jsonDecode(res.body);
        if (data["drowsy"] == true) {
          print("졸음 감지됨 → 팝업 알림 표시");

          showDialog(
            context: context,
            builder: (BuildContext context) {
              return AlertDialog(
                title: Text("졸음 감지"),
                content: Text("졸음이 감지되어 타이머가 자동으로 정지되었습니다."),
                actions: [
                  TextButton(
                    onPressed: () => Navigator.of(context).pop(),
                    child: Text("확인"),
                  ),
                ],
              );
            },
          );

          // 상태 초기화 요청
          await http.get(Uri.parse('$flaskURL/reset'));
        }
      }
    } catch (e) {
      print("Error checking drowsiness: $e");
    }
  }

  void _manualReset() async {
    try {
      await http.get(Uri.parse('$flaskURL/reset'));
      setState(() {
        _formattedTime = "00:00:00";
      });
    } catch (e) {
      print("Reset failed: $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Drowsiness Timer')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(_formattedTime, style: TextStyle(fontSize: 48)),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _manualReset,
              child: Text("Reset (앱에서)"),
            ),
          ],
        ),
      ),
    );
  }
}
