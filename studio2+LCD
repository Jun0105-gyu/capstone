import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';
import 'package:drowsy_timer/stats/statistics_page.dart';

void main() {
  runApp(DrowsinessApp());
}

class DrowsinessApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Drowsiness Timer',
      home: StopwatchPage(),
    );
  }
}

class StopwatchPage extends StatefulWidget {
  @override
  _StopwatchPageState createState() => _StopwatchPageState();
}

class _StopwatchPageState extends State<StopwatchPage> {
  String _time = "00:00:00";
  Timer? _timer;
  bool _isRunning = false;
  String flaskURL = "http://라즈베리파이IP:5000"; // 꼭 본인 IP로 바꾸세요

  void _startTimer() async {
    await http.get(Uri.parse('$flaskURL/start'));
    _isRunning = true;
    _timer = Timer.periodic(Duration(seconds: 1), (timer) {
      _fetchTime();
    });
  }

  void _stopTimer() async {
    await http.get(Uri.parse('$flaskURL/stop'));
    _isRunning = false;
    _timer?.cancel();
  }

  void _resetTimer() async {
    await http.get(Uri.parse('$flaskURL/reset'));
    setState(() {
      _time = "00:00:00";
    });
  }

  void _fetchTime() async {
    try {
      final res = await http.get(Uri.parse('$flaskURL/get_time'));
      if (res.statusCode == 200) {
        final data = jsonDecode(res.body);
        setState(() {
          _time = data['time'];
        });
      }
    } catch (e) {
      print("Error fetching time: $e");
    }
  }

  void _sendTimeToFlask(String time) async {
    try {
      final res = await http.post(
        Uri.parse('$flaskURL/update_time'),
        headers: {"Content-Type": "application/json"},
        body: jsonEncode({"time": time}),
      );
      if (res.statusCode != 200) {
        print("Failed to send time: ${res.statusCode}");
      }
    } catch (e) {
      print("Failed to send time: $e");
    }
  }

  @override
  void dispose() {
    _timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Drowsiness Timer")),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Text(_time, style: TextStyle(fontSize: 48)),
          SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton(onPressed: _startTimer, child: Text("Start")),
              SizedBox(width: 10),
              ElevatedButton(
                onPressed: () {
                  _stopTimer();
                  _sendTimeToFlask(_time);
                },
                child: Text("Stop"),
              ),
              SizedBox(width: 10),
              ElevatedButton(onPressed: _resetTimer, child: Text("Reset")),
            ],
          ),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (_) => StatisticsPage()),
              );
            },
            child: Text("통계 보기"),
          ),
        ],
      ),
    );
  }
}
