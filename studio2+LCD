Future<void> sendTimeToFlask(String time) async {
  try {
    final res = await http.post(
      Uri.parse('$flaskURL/update_time'),
      headers: {"Content-Type": "application/json"},
      body: jsonEncode({"time": time}),
    );
    if (res.statusCode == 200) {
      print("Time sent to Flask: $time");
    } else {
      print("Failed to send time: ${res.statusCode}");
    }
  } catch (e) {
    print("Failed to send time: $e");
  }
}

Future<void> checkDrowsiness() async {
  try {
    final res = await http.get(Uri.parse('$flaskURL/detect_drowsiness'));
    if (res.statusCode == 200) {
      final data = jsonDecode(res.body);
      print("Drowsiness check result: ${data.toString()}");
      if (data["drowsy"] == true) {
        print("졸음 감지됨 → 타이머 자동 정지");
        _stopTimer();

        // 필요 시: Reset API 호출
        await http.get(Uri.parse('$flaskURL/reset'));
        print("Flask 상태 초기화됨");
      }
    } else {
      print("Failed to get drowsiness data: ${res.statusCode}");
    }
  } catch (e) {
    print("Error checking drowsiness: $e");
  }
}
